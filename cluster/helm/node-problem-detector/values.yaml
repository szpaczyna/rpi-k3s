## values for node-problem-detector

settings:
  custom_monitor_definitions: {}
  log_monitors:
    - /config/kernel-monitor.json
    - /config/docker-monitor.json
    - /config/systemd-monitor.json

  custom_plugin_monitors:
    - /config/kernel-monitor-counter.json
    - /config/docker-monitor-counter.json
    - /config/systemd-monitor-counter.json
    - /config/network-problem-monitor.json

  extraArgs: []
  prometheus_address: 0.0.0.0
  prometheus_port: 20257
  heartBeatPeriod: 5m0s

logDir:
  host: /run/log/journal
  pod: ""

image:
  repository: szpaczyn/node-problem-detector
    #repository: k8s.gcr.io/node-problem-detector/node-problem-detector
  tag: v0.8.12
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

rbac:
  create: true
  pspEnabled: false

hostNetwork: false
hostPID: false

priorityClassName: system-node-critical

securityContext:
  privileged: true

resources: {}
annotations: {}
  #  prometheus.io/scrape: "true"
  #  prometheus.io/path: /metrics
  #  prometheus.io/port: "20257"
  #  prometheus.io/scheme: http
labels: {}

tolerations:
  - effect: NoSchedule
    operator: Exists

serviceAccount:
  create: true
  name:

affinity: {}
nodeSelector: {}

metrics:
  # metrics.enabled -- Expose metrics in Prometheus format with default configuration.
  enabled: true
  # metrics.annotations -- Override all default annotations when `metrics.enabled=true` with specified values.
  annotations: {}
  serviceMonitor:
    enabled: false
    additionalLabels: {}
  prometheusRule:
    enabled: false
    defaultRules:
      create: true
      disabled: []
    additionalLabels: {}
    additionalRules: []

env:
extraVolumes: []
extraVolumeMounts: []
extraContainers: []

updateStrategy: RollingUpdate
maxUnavailable: 1
