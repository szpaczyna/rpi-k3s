{{- if .Values.transmission.enable }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transmission
  labels:
    app.kubernetes.io/name: transmission
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: transmission
  template:
    metadata:
      labels:
        app.kubernetes.io/name: transmission
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9190"
    spec:
      serviceAccountName: media
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      securityContext:
        runAsGroup: {{ .Values.global.runAsGroup }}
        runAsUser: {{ .Values.global.runAsUser }}
      initContainers:
      {{- if $.Values.configStorage.enabled }}
      - name: fix-permissions
        image: busybox:latest
        command:
        - /bin/sh
        - -c
        - chown -R {{ .Values.global.runAsUser }}:{{ .Values.global.runAsGroup }} /config && chmod -R 755 /config
        volumeMounts:
        - mountPath: /config
          name: transmission-config
        securityContext:
          runAsUser: 0
      {{- end }}
      - name: flood
        image: "{{ .Values.transmission.curl.repository }}:{{ .Values.transmission.curl.tag }}"
        command:
        - /bin/sh
        - -c
        - curl -o- -sL https://github.com/johman10/flood-for-transmission/releases/download/latest/flood-for-transmission.tar.gz
            | tar xzf - -C /config
        volumeMounts:
        {{- if $.Values.configStorage.enabled }}
        - mountPath: /config
          name: transmission-config
        {{- else }}
        - mountPath: /config
          name: media
          subPath: config/transmission
        {{- end }}
        securityContext:
          runAsUser: {{ .Values.global.runAsUser }}
          runAsGroup: {{ .Values.global.runAsGroup }}
      containers:
      - name: transmission
        image: "{{ printf "%s:%s" .Values.images.transmission.repository .Values.images.transmission.tag }}"
        imagePullPolicy: IfNotPresent
        env:
        - name: TRANSMISSION_DOWNLOAD_DIR
          value: "/downloads/complete"
        - name: TRANSMISSION_DOWNLOAD_QUEUE_SIZE
          value: "24"
        - name: TRANSMISSION_INCOMPLETE_DIR
          value: "/downloads/incomplete"
        - name: TRANSMISSION_INCOMPLETE_DIR_ENABLED
          value: "true"
        - name: TRANSMISSION_RPC_PASSWORD
          value: "CHANGEME"
        - name: TRANSMISSION_WATCH_DIR_ENABLED
          value: "false"
        - name: TRANSMISSION_WEB_HOME
          value: "/config/flood-for-transmission"
        - name: TZ
          value: "{{ .Values.global.timezone }}"
        - name: UMASK
          value: "022"
        ports:
        - name: http
          containerPort: {{ .Values.transmission.service.port }}
          protocol: TCP
        - name: utptcp
          containerPort: {{ .Values.transmission.loadbalancer.port }}
          protocol: TCP
        - name: utpudp
          containerPort: {{ .Values.transmission.loadbalancer.port }}
          protocol: UDP
        volumeMounts:
        {{- if $.Values.configStorage.enabled }}
        - mountPath: /config
          name: transmission-config
        {{- else }}
        - mountPath: /config
          name: media
          subPath: config/transmission
        {{- end }}
        - mountPath: /downloads
          name: media
          subPath: downloads/transmission
        resources:
          requests:
            cpu: {{ .Values.global.resources.requests.cpu }}
            memory: {{ .Values.global.resources.requests.memory }}
          limits:
            cpu: {{ .Values.global.resources.limits.cpu }}
            memory: {{ .Values.global.resources.limits.memory }}
      - name: exporter      
        image: "szpaczyn/transmission_exporter-arm64:v0.3.0"
        imagePullPolicy: IfNotPresent
        ports:
        - name: exporter
          containerPort: 9190
        env:
        - name: TZ
          value: "{{ .Values.global.timezone }}"
        - name: TRANSMISSION_ADDR
          value: "http://localhost:9091"
        - name: WEB_PATH
          value: "/metrics"
        - name: WEB_ADDR
          value: ":9190"
        resources:
          requests:
            cpu: {{ .Values.global.resources.requests.cpu }}
            memory: {{ .Values.global.resources.requests.memory }}
          limits:
            cpu: {{ .Values.global.resources.limits.cpu }}
            memory: {{ .Values.global.resources.limits.memory }}
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: media
      {{- if $.Values.configStorage.enabled }}
      - name: transmission-config
        persistentVolumeClaim:
          claimName: transmission
      {{- end }}
{{- if $.Values.global.nodeSelector }}
{{ toYaml (dict "nodeSelector" $.Values.global.nodeSelector) | nindent 6 }}
{{- end }}
{{- end }}
