{{- if .Values.calibreWeb.enable }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calibre-web
  labels:
    app.kubernetes.io/name: calibre-web
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: calibre-web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: calibre-web
    spec:
      serviceAccountName: media
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      securityContext: {}
      {{- if $.Values.configStorage.enabled }}
      initContainers:
        - name: fix-permissions
          image: busybox:latest
          command:
            - /bin/sh
            - -c
            - chown -R {{ .Values.global.runAsUser }}:{{ .Values.global.runAsGroup }} /config && chmod -R 755 /config
          volumeMounts:
            - mountPath: /config
              name: calibre-web-config
          securityContext:
            runAsUser: 0
      {{- end }}
      containers:
        - name: calibre-web
          image: "{{ printf "%s:%s" .Values.images.calibreWeb.repository .Values.images.calibreWeb.tag }}"
          imagePullPolicy: Always
          env:
            - name: TZ
              value: "{{ .Values.global.timezone }}"
            - name: PUID
              value: "{{ .Values.global.runAsUser }}"
            - name: PGID
              value: "{{ .Values.global.runAsGroup }}"
            - name: UMASK
              value: "022"
          ports:
            - name: calibre-web
              containerPort: {{ .Values.calibreWeb.service.port }}
              protocol: TCP
          volumeMounts:
            {{- if $.Values.configStorage.enabled }}
            - mountPath: /config
              name: calibre-web-config
            {{- else }}
            - mountPath: /config
              name: media
              subPath: config/calibre-web
            {{- end }}
            - mountPath: /books
              name: media
              subPath: library/books
          resources:
            requests:
              cpu: {{ .Values.global.resources.requests.cpu }}
              memory: {{ .Values.global.resources.requests.memory }}
            limits:
              cpu: {{ .Values.global.resources.limits.cpu }}
              memory: {{ .Values.global.resources.limits.memory }}
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: media
      {{- if $.Values.configStorage.enabled }}
      - name: calibre-web-config
        persistentVolumeClaim:
          claimName: calibre-web
      {{- end }}
{{- if $.Values.global.nodeSelector }}
{{ toYaml (dict "nodeSelector" $.Values.global.nodeSelector) | nindent 6 }}
{{- end }}
{{- end }}
