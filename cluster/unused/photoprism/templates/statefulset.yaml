---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "photoprism.fullname" . }}
  labels:
    {{- include "photoprism.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "photoprism.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "photoprism.fullname" . }}
  template:
    metadata:
      labels:
        {{- include "photoprism.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
        - name: photoprism
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: PHOTOPRISM_HTTP_HOST
            value: 0.0.0.0
          - name: PHOTOPRISM_HTTP_PORT
            value: "2342"
          envFrom:
          - configMapRef:
              name: {{ include "photoprism.fullname" . }}-config
          {{- if or (not .Values.existingSecret) (not .Values.database.existingSecret) }}
          - secretRef:
              name: {{ include "photoprism.fullname" . }}-secret
          {{- end }}
          {{- if .Values.existingSecret }}
          - secretRef:
              name: {{ .Values.existingSecret }}
          {{- end }}
          {{- if and .Values.database.existingSecret (ne (default "" .Values.existingSecret) (default "" .Values.database.existingSecret)) }}
          - secretRef:
              name: {{ .Values.database.existingSecret }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: 2342
              name: http
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.originals.mountPath }}
              subPath: {{ .Values.persistence.originals.subPath }}
            - name: data
              mountPath: {{ .Values.persistence.storage.mountPath }}
              subPath: {{ .Values.persistence.storage.subPath }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
      {{- else if not .Values.persistence.enabled }}
      - name: data
        emptyDir: {}
  {{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
          {{- if .Values.persistence.storageClass }}
          storageClassName: {{ .Values.persistence.storageClass | quote }}
          {{- end }}
          resources:
            requests:
              storage: {{ .Values.persistence.size | quote }}
{{- end }}
