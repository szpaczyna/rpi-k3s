---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  labels:
    app.kubernetes.io/name: elasticsearch
spec:
  replicas: 1
  serviceName: elasticsearch
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9114"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app.kubernetes.io/name"
                  operator: In
                  values:
                  - elasticsearch
            topologyKey: "kubernetes.io/hostname"
      serviceAccountName: elasticsearch
      initContainers:
        - name: create-directory
          image: docker.io/alpine:3.15.0
          command: ["mkdir", "-p", "/usr/share/elasticsearch/data/nodes"]
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
        - name: permissions
          image: docker.io/alpine:3.15.0
          command: ["chown", "-R", "1000:1000", "/usr/share/elasticsearch"]
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1-arm64
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: elasticsearch-config
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
            - name: elasticsearch-config
              mountPath: /usr/share/elasticsearch/config/jvm.options
              subPath: jvm.options
            - name: data
              mountPath: /usr/share/elasticsearch/data
          workingDir: /usr/share/elasticsearch/data
          ports:
            - containerPort: 9200
              protocol: TCP
              name: elasticsearch
            - containerPort: 9300
              protocol: TCP
              name: cluster
          resources:
            limits:
              cpu: 0.7
              memory: 1536Mi
            requests:
              cpu: 0.2
              memory: 768Mi
        - name: exporter
          image: szpaczyn/elasticsearch_exporter-arm64:v1.2.0
          imagePullPolicy: IfNotPresent
          command:
          - /bin/elasticsearch_exporter
          - --es.uri=http://127.0.0.1:9200
          - --es.timeout=60s
          - --es.all
          - --es.indices
          - --es.shards
          ports:
          - name: metrics
            containerPort: 9114
            protocol: TCP
          resources:
            limits:
              cpu: 25m
              memory: 64Mi
            requests:
              cpu: 10m
              memory: 20Mi
      terminationGracePeriodSeconds: 30
      volumes:
      - name: elasticsearch-config
        configMap:
          name: elasticsearch-config
      nodeSelector:
        kubernetes.io/role: worker
      tolerations:
        - effect: NoSchedule
          operator: Exists
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        storageClassName: longhorn
        resources:
          requests:
            storage: 60Gi
