---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  labels:
    app.kubernetes.io/name: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kibana
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kibana
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5601"
        prometheus.io/path: "_prometheus/metrics"
    spec:
      containers:
        - name: kibana
          image: szpaczyn/kibana-arm64:v7.9.3
          imagePullPolicy: Always
          ports:
            - containerPort: 5601
              protocol: TCP
              name: http
          resources:
            limits:
              cpu: 1
              memory: 512Mi
            requests:
              cpu: 0.1
              memory: 256Mi
          volumeMounts:
            - name: kibana-data
              mountPath: /usr/share/kibana/data
            - name: kibana-config
              mountPath: /usr/share/kibana/config
      terminationGracePeriodSeconds: 5
      volumes:
      - name: kibana-data
        persistentVolumeClaim:
          claimName: data-kibana
      - name: kibana-config
        configMap:
          name: kibana-config
      nodeSelector:
        kubernetes.io/role: worker
      tolerations:
        - effect: NoSchedule
          operator: Exists
