---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
spec:
  replicas: 2
  serviceName: prometheus
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app.kubernetes.io/name"
                  operator: In
                  values:
                  - prometheus
            topologyKey: "kubernetes.io/hostname"
      serviceAccountName: prometheus
      initContainers:
        - name: chown
          image: docker.io/alpine:3.15.0
          command: ["chown", "-R", "65534:65534", "/var/lib/prometheus"]
          volumeMounts:
            - name: data
              mountPath: /var/lib/prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:v2.34.0
          args:
            - --web.listen-address=0.0.0.0:9090
            - --config.file=/etc/prometheus/prometheus.yaml
            - --storage.tsdb.path=/var/lib/prometheus
            - --storage.tsdb.retention.time=35d
            - --storage.tsdb.retention.size=40GB
            - --storage.tsdb.min-block-duration=1h
            - --storage.tsdb.max-block-duration=2h
          ports:
            - name: web
              containerPort: 9090
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
            - name: data
              mountPath: /var/lib/prometheus
          readinessProbe:
            httpGet:
              path: /-/ready
              port: web
            initialDelaySeconds: 10
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: web
            initialDelaySeconds: 10
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 2Gi
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: prometheus-config
      nodeSelector:
        kubernetes.io/role: worker
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        storageClassName: longhorn
        resources:
          requests:
            storage: 64Gi
