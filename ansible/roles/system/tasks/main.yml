---

# # Enable this if you run into issues updating
# - name: Reset dpkg
#   command: dpkg --configure -a

- name: Upgrade system
  apt:
    upgrade: dist
    # Need the force_apt_get until
    # https://github.com/ansible/ansible/issues/56832
    force_apt_get: true
  register: apt_upgrade
  retries: 5
  until: apt_upgrade is success

- name: Upgrade all packages to the latest version
  apt:
    name: "*"
    force_apt_get: true
  register: apt_update
  retries: 5
  until: apt_update is success

- name: Install Common Packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - dnsutils
      - git
      - gnupg2
      - htop
      - iputils-ping
      - libnss-mdns
      - neofetch
      - net-tools
      - nfs-common
      - nmap
      - psmisc
      - python3
      - python3-pip
      - rsync
      - software-properties-common
      - mtr
      - unattended-upgrades
      - wget
      - chrony
      - rsyslog-elasticsearch
      - pigz
      - pv
      - zsh
      - util-linux
    install_recommends: false
    update_cache: true
    # Need the force_apt_get until
    # https://github.com/ansible/ansible/issues/56832
    force_apt_get: true
  register: apt_install_common
  retries: 5
  until: apt_install_common is success

- name: Clean up apt
  apt:
    autoremove: true
    # Need the force_apt_get until
    # https://github.com/ansible/ansible/issues/56832
    force_apt_get: true

- name: Apt configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - { src: 'templates/apt/10periodic.j2', dest: '/etc/apt/apt.conf.d/10.periodic' }
    - { src: 'templates/apt/50unattended-upgrades.j2', dest: '/etc/apt/apt.conf.d/40unattended-upgrades' }
    - { src: 'templates/apt/999_decompress_rpi_kernel.j2', dest: '/etc/apt/apt.conf.d/999_decompress_rpi_kernel' }

- name: Copy decompress rpi kernel script in place
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    owner: root
    group: root
    mode: 0755
  loop:
    - { src: 'templates/apt/999_decompress_rpi_kernel.j2', dest: '/etc/apt/apt.conf.d/999_decompress_rpi_kernel' }

# See: https://github.com/kubernetes/kubernetes/issues/71305
- name: Use iptables-legacy instead of nftables.
  alternatives:
    name: iptables
    path: /usr/sbin/iptables-legacy

- name: Restart chrony service
  systemd:
    name: chrony
    enabled: true
    state: restarted

- name: Enable chrony service and assure it is started
  systemd:
    name: chrony
    enabled: true
    state: started

- name: Deploy custom hosts file
  template:
    src: hosts.j2
    dest: /etc/hosts
    mode: 0644

- name: Create sysctl dir if it does not exist
  file:
    path: /etc/sysctl.d
    state: directory
    mode: '0755'

- name: Create audit rules dir if it does not exist
  file:
    path: /etc/audit/rules.d
    state: directory
    mode: '0755'

- name: Sysctl
  template:
    src: sysctl/99-local.conf.j2
    dest: /etc/sysctl.d/99-local.conf
    mode: 0644

- name: Auditd configuration
  copy:
    src: auditd/{{ item }}
    dest: "/etc/audit/rules.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - 90-shpaq.rules
    - 99-finalize.rules

- name: Disable system modules
  template:
    src: modules/hardening.conf.j2
    dest: /etc/modprobe.d/hardening.conf
    mode: 0640

- name: Syslog to elasticsearch
  template:
    src: syslog/01-elk.conf.j2
    dest: /etc/rsyslog.d/01-elk.conf
    mode: 0644

- name: Efemeric journald
  template:
    src: journald.conf.j2
    dest: /etc/systemd/journald.conf
    mode: 0644

# Allowed to fail inorder to be idempotent
- name: Stop log2ram service
  systemd:
    name: log2ram
    state: stopped
  ignore_errors: true

- name: Cloning log2ram from GitHub
  git:
    repo: https://github.com/azlux/log2ram.git
    dest: /opt/log2ram
    version: "{{ log2ram_version }}"

- name: Changing perms of "/opt/log2ram/install.sh"
  file:
    dest: /opt/log2ram/install.sh
    mode: a+x

- name: Install log2ram
  command: /bin/sh ./install.sh
  args:
    chdir: "/opt/log2ram"
  register: log2ram
  changed_when: '"Reboot to activate log2ram" in log2ram.stdout'

- name: Copy log2ram.conf
  template:
    src: log2ram.conf.j2
    dest: /etc/log2ram.conf
    mode: 0644

## zram
- name: Cloning zram-swap-config from GitHub # noqa 401
  git:
    repo: https://github.com/StuartIanNaylor/zram-swap-config.git
    dest: /opt/zram-swap-config

- name: Changing perms of "/opt/zram-swap-config/install.sh"
  file:
    dest: /opt/zram-swap-config/install.sh
    mode: a+x

- name: Install zram-swap-config
  command: /bin/sh ./install.sh
  args:
    chdir: "/opt/zram-swap-config"
  register: zram
  changed_when: '"Reboot to activate zram-swap-config" in zram.stdout'

- name: Copy zram-swap-config.conf
  template:
    src: zram-swap-config.conf.j2
    dest: /etc/zram-swap-config.conf
    mode: 0644

## some system stuff
- name: Create a firmware folder if it does not exist
  file:
    path: /boot/firmware
    state: directory
    mode: '0755'

- name: Create the config files if they do not exist
  file:
    path: "{{ item }}"
    state: touch
    mode: 0640
  with_items:
    - /boot/firmware/nobtcmd.txt
    - /boot/firmware/syscfg.txt

- name: Custom system config
  copy:
    src: auditd/{{ item }}
    dest: "/etc/audit/rules.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - 90-shpaq.rules
    - 99-finalize.rules

- name: Deploy custom system config
  template:
    src: boot/usercfg.txt.j2
    dest: /boot/firmware/usercfg.txt
    mode: 0644

- name: Deploy cmdline.txt
  template:
    src: boot/cmdline.txt.j2
    dest: /boot/firmware/cmdline.txt
    mode: 0644

- name: Deploy kernel decompression script
  template:
    src: boot/auto_decompress_kernel
    dest: /boot/firmware/auto_decompress_kernel
    mode: 0755
