# Declare variables to be passed into your templates.

ui:
  title: "Docker registry UI"
  delete_images: true
  proxy: true

  replicaCount: 1
  image:
    registry: docker.io
    repository: joxit/docker-registry-ui
    tag: main-static
    pullPolicy: Always
  probe:
    liveness: true
    readiness: true

  resources:
  limits:
    cpu: 250m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi
  nodeSelector:
    kubernetes.io/role: worker
  tolerations: []
  affinity: {}
  fullnameOverride: "registry-ui"

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod                            
      traefik.frontend.redirect.permanent: 'true'                                 
      traefik.ingress.kubernetes.io/frontend-entry-points: http, https            
      traefik.ingress.kubernetes.io/redirect-entry-point: https   
    hosts:
      - host: registry.shpaq.org

    tls: 
      - secretName: registry-shpaq-org-tls
        hosts:
          - registry.shpaq.org

registry:
  external: false
  # URL of the registry (requiered. Note: this wont work as localhost is inside the container. Only used if the registry is external)
  url: http://localhost:5000

  replicaCount: 1
  # Image definition for the registry (Only used if the registry is not external)
  image:
    registry: docker.io
    repository: registry
    tag: 2.7.1
    pullPolicy: Always
  probe:
    liveness: true
    readiness: true
  resources:
    limits:
      cpu: 400m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector:
    kubernetes.io/role: worker
  tolerations: []
  affinity: {}
  fullnameOverride: "registry"

  persistence:
    enabled: true
    storageClass: "nfs"
    annotations:
    accessModes:
    # This have to be ReadWriteMany if replicaCount>1
      - ReadWriteOnce
    size: 30Gi

  service:
    type: ClusterIP
    port: 5000

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: docker-registry.local

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

imagePullSecrets: []
nameOverride: "registry"
