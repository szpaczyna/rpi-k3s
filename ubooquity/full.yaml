---
# Source: ubooquity/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ubooquity
  labels:
    app.kubernetes.io/name: ubooquity
---
# Source: ubooquity/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ubooquity
  labels:
    app.kubernetes.io/name: ubooquity
data:
  preferences.json: |
    {"adminPortNumber":2203,"autoScanAtLaunch":true,"autoscanPeriod":720,"bookHeight":230,"bookWidth":160,"bookmarkUsingCookies":false,"booksPaginationNumber":30,"booksPaths":[{"pathString":"/books","userName":[]}],"bypassSingleRootFolder":false,"comicHeight":230,"comicWidth":160,"comicsPaginationNumber":30,"comicsPaths":[{"pathString":"/comics","userName":[]}],"displayTitleInsteadOfFileName":false,"enableFolderMetadataDisplay":false,"filesPaths":[{"pathString":"/files","userName":[]}],"folderExclusionPattern":"","isBooksProviderEnabled":true,"isComicsProviderEnabled":true,"isFilesProviderEnabled":true,"isOpdsProviderEnabled":false,"isRemoteAdminEnabled":false,"isShrinkingCacheEnabled":false,"isUserManagementEnabled":false,"keepUnreachableSharedFolders":false,"keystorePassword":"Dupa.0987","keystorePath":"/config/keystore","libraryPortNumber":2202,"minimizeOnStartup":false,"minimizeToTray":false,"reverseProxyPrefix":"","shrinkingCachePath":"","shrunkPageHeight":2500,"shrunkPageWidth":1536,"theme":"dark","users":[]}
---
# Source: ubooquity/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ubooquity-config
  labels:
    app.kubernetes.io/name: ubooquity
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
  storageClassName: local-path
---
# Source: ubooquity/templates/pvc2.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ubooquity-books
  labels:
    app.kubernetes.io/name: ubooquity
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "3Gi"
  storageClassName: local-path
---
# Source: ubooquity/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ubooquity
  labels:
    app.kubernetes.io/name: ubooquity
spec:
  type: ClusterIP
  ports:
    - port: 2202
      targetPort: http
      protocol: TCP
      name: http
    - port: 2203
      targetPort: http-admin
      protocol: TCP
      name: http-admin
  selector:
    app.kubernetes.io/name: ubooquity
---
# Source: ubooquity/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ubooquity
  labels:
    app.kubernetes.io/name: ubooquity
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ubooquity
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ubooquity
    spec:
      serviceAccountName: ubooquity
      securityContext:
        {}
      containers:
        - name: ubooquity
          securityContext:
            {}
          image: "linuxserver/ubooquity:2.1.2-ls36"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              protocol: TCP
              containerPort: 2202
            - name: http-admin
              protocol: TCP
              containerPort: 2203
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - { name: PUID, value: "1000" }
            - { name: GUID, value:  }
            - { name: TZ, value: "Europe/Warsaw" }
            - { name: MAXMEM, value: "1024" }
          volumeMounts:
            - mountPath: /config
              name: config
            
            - mountPath: /books
              name: books
              # - mountPath: /config/preferences.json
              # name: configmap
              # subPath: preferences.json
      volumes:
        - name: books
          persistentVolumeClaim:
            claimName: ubooquity-books
        - name: config
          persistentVolumeClaim:
            claimName: ubooquity-config
            # - name: configmap
            # configMap:
            # name: ubooquity
---
# Source: ubooquity/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ubooquity
  labels:
    app.kubernetes.io/name: ubooquity
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: traefik
    traefik.frontend.redirect.permanent: "true"
    traefik.ingress.kubernetes.io/frontend-entry-points: http, https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
    - hosts:
        - "books.shpaq.org"
      secretName: books-shpaq-org-tls
  rules:
    - host: "books.shpaq.org"
      http:
        paths:
          - path: /
            backend:
              serviceName: ubooquity
              servicePort: 2202
