apiVersion: apps/v1
kind: Deployment
metadata:
  name: ubooquity
  labels:
    app.kubernetes.io/name: ubooquity
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ubooquity
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ubooquity
    spec:
      serviceAccountName: ubooquity
      securityContext:
        {}
      containers:
        - name: ubooquity
          securityContext:
            {}
          image: "linuxserver/ubooquity:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              protocol: TCP
              containerPort: 2202
            - name: http-admin
              protocol: TCP
              containerPort: 2203
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - { name: PUID, value: "1000" }
            - { name: GUID, value:  }
            - { name: TZ, value: "Europe/Warsaw" }
            - { name: MAXMEM, value: "1024" }
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /books
              name: books
            - mountPath: /config/preferences.json
              name: configmap
              subPath: preferences.json
      volumes:
        - name: books
          persistentVolumeClaim:
            claimName: ubooquity-books
        - name: config
          persistentVolumeClaim:
            claimName: ubooquity-config
         - name: configmap
             configMap:
             name: ubooquity

