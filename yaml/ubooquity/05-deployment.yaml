---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ubooquity
  labels:
    app: ubooquity
  annotations:
    backup.velero.io/backup-volumes: ubooquity-books
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ubooquity
  template:
    metadata:
      labels:
        app: ubooquity
    spec:
      serviceAccountName: ubooquity
      securityContext: {}
      containers:
        - name: ubooquity
          image: "registry.shpaq.org/ubooquity:2.1.2-r1"
          imagePullPolicy: Always
          ports:
            - name: http
              protocol: TCP
              containerPort: 2202
            - name: http-admin
              protocol: TCP
              containerPort: 2203
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            requests:
              cpu: 500m
              memory: 256Mi
            limits:
              cpu: 1000m
              memory: 1000Mi
          env:
            - { name: PUID, value: "1000" }
            - { name: GUID, value:  }
            - { name: TZ, value: "Europe/Warsaw" }
            - { name: MAXMEM, value: "1024" }
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /books
              name: books
            - mountPath: /config/
              name: configmap
              subPath: preferences.json
      volumes:
        - name: books
          persistentVolumeClaim:
            claimName: ubooquity-books
        - name: config
          persistentVolumeClaim:
            claimName: ubooquity-config
        - name: configmap
          configMap:
            name: ubooquity
      nodeSelector:
          kubernetes.io/role: "worker"
