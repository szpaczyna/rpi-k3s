---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ubooquity
  labels:
    app: ubooquity
    app.kubernetes.io/name: ubooquity
    app.kubernetes.io/instance: ubooquity
  annotations:
    backup.velero.io/backup-volumes: |
        ubooquity-data
        ubooquity-config
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ubooquity
  template:
    metadata:
      labels:
        app: ubooquity
    spec:
      serviceAccountName: ubooquity
      containers:
        - name: ubooquity
          image: "registry.shpaq.org/ubooquity:2.1.2"
          imagePullPolicy: Always
          ports:
            - name: http
              protocol: TCP
              containerPort: 2202
            - name: http-admin
              protocol: TCP
              containerPort: 2203
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          env:
            - { name: PUID, value: "1000" }
            - { name: GUID, value: "911" }
            - { name: TZ, value: "Europe/Warsaw" }
            - { name: MAXMEM, value: "512" }
          volumeMounts:
            - name: config
              mountPath: /config
            - name: books
              mountPath: /books
            - name: configmap
              mountPath: /config/preferences.json
              subPath: preferences.json
      terminationGracePeriodSeconds: 15
      securityContext: {}
      #  fsGroup: 911
      #  runAsNonRoot: true
      #  runAsUser: 1000
      volumes:
        - name: books
          persistentVolumeClaim:
            claimName: ubooquity-data
        - name: config
          persistentVolumeClaim:
            claimName: ubooquity-config
        - name: configmap
          configMap:
            name: ubooquity
      nodeSelector:
        kubernetes.io/role: "worker"
